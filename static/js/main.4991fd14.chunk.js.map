{"version":3,"sources":["components/clientCredential.js","components/Musixplore.js","components/Genres.js","components/FeaturedPlaylists.js","components/NewReleases.js","pages/BrowsePage.js","components/Playlists.js","pages/PlaylistsPage.js","components/Album.js","pages/AlbumPage.js","components/Songs.js","pages/SongsPage.js","components/AlbumInfoSI.js","components/SongDetailsSI.js","components/ArtistsSI.js","pages/SongInfoPage.js","components/Main.js","App.js","index.js"],"names":["client_credential_flow","target_url","callback","request","require","authOptions","url","headers","Buffer","CLIENT_ID","toString","form","grant_type","json","post","error","response","body","statusCode","token","access_token","options","get","Musixplore","to","pathname","process","className","Genres","props","state","genres","err","genre_results","console","log","genresFromApi","JSON","parse","stringify","setState","categories","items","this","map","genre","categoryId","id","categotyName","name","key","icons","icon","src","alt","Component","FeaturedPlaylists","featuredPlaylists","featured_playlist_results","featuredPlaylistsFromApi","playlists","featuredPlaylist","playlistId","playlistName","playlistOwner","owner","images","image","NewReleases","newReleases","new_releases_results","newReleasesFromApi","albums","newRelease","albumId","albumName","albumsArtists","artists","BrowsePage","Playlists","concat","playlistsId","location","playlist_results","playlistsFromApi","categoryName","playlist","React","PlaylistsPage","Album","albumArtists","albumTracks","albumImg","albumReleaseDate","albumInfo","album_results","albumFromApi","tracks","release_date","artist","i","track","songId","songName","AlbumPage","Songs","songs","songsId","songs_results","songsFromApi","display_name","flatMap","song","album","SongsPage","AlbumInfoSI","releaseDate","type","extUrl","imgUrl","albumDetailsFromApi","album_type","external_urls","spotify","href","SongDetailsSI","songDetails","duration","popularity","previewUrl","song_results","songDetailsFromApi","duration_ms","preview_url","minutes","Math","floor","seconds","toFixed","ArtistsSI","artistsIdsConcat","index","artistsUrlWithIds","artists_results","artistsFromApi","SongInfoPage","Main","exact","path","render","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4991fd14.chunk.js","sourcesContent":["// musixplore requesting authorization via client credential flow\n// more info here: https://developer.spotify.com/documentation/general/guides/authorization-guide/\n\nfunction client_credential_flow(target_url, callback) {\n    var request = require('request');\n\n    const CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\n    var CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\n\n    var authOptions = {\n        url: 'https://accounts.spotify.com/api/token',\n        headers: {\n            'Authorization': 'Basic ' + (new Buffer(CLIENT_ID + ':' + CLIENT_SECRET).toString('base64'))\n        },\n        form: {\n            grant_type: 'client_credentials'\n        },\n        json: true\n    };\n\n    request.post(authOptions, function(error, response, body) {\n        if (!error && response.statusCode === 200) {\n            var token = body.access_token;\n            var options = {\n                url: target_url,\n                headers: {\n                    'Authorization': 'Bearer ' + token\n                },\n                json: true\n            };\n            \n            // understanding callbacks: https://stackoverflow.com/questions/14220321/how-do-i-return-the-response-from-an-asynchronous-call?page=1&tab=votes#tab-top\n            // solved using with the help of: https://stackoverflow.com/questions/20081157/return-results-from-request-js-request-method\n            request.get(options, function(error, response, body) {\n                callback(null, body);\n            });\n        }\n    });\n}\n\nexport default client_credential_flow","import React from \"react\"\nimport \"../styles.css\"\nimport { Link } from \"react-router-dom\";\n\nfunction Musixplore() {  \n    return(\n        <h1> <Link to={{ pathname: process.env.PUBLIC_URL + \"/\" }} className=\"musixplore-icon-link\"> musixplore </Link> </h1>\n    )\n}\n\nexport default Musixplore","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport client_credential_flow from \"./clientCredential.js\"\n\nclass Genres extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            genres: []\n        }\n    }\n\n    componentDidMount() {\n        client_credential_flow ('https://api.spotify.com/v1/browse/categories', (err, genre_results) => {\n            console.log(err, genre_results);\n            let genresFromApi = JSON.parse(JSON.stringify(genre_results));\n            this.setState({ genres: genresFromApi.categories.items })\n        });\n    }\n    \n    render() {\n        return (\n            <div className=\"browse-category\">\n                <h3>Genres</h3>\n                <div className=\"category\">\n                    {this.state.genres.map((genre) => \n                    <Link to={{pathname: process.env.PUBLIC_URL + \"/playlists\",\n                                state: {\n                                    categoryId: genre.id,\n                                    categotyName: genre.name}\n                        }}\n                        className=\"category-tile-link\" key={genre.id}>\n                        <div className=\"category-tile\" key={genre.id}>\n                            {genre.icons.map((icon) => \n                            <img className=\"category-img\" key={genre.id} src={icon.url} alt={genre.name}/>)}\n                            <p key={genre.id} className=\"category-name\"> {genre.name} </p>\n                        </div>\n                    </Link>)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Genres","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport client_credential_flow from \"./clientCredential.js\"\n\nclass FeaturedPlaylists extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            featuredPlaylists: []\n        }\n    }\n\n    componentDidMount() {\n        client_credential_flow ('https://api.spotify.com/v1/browse/featured-playlists', (err, featured_playlist_results) => {\n            console.log(err, featured_playlist_results);\n            let featuredPlaylistsFromApi = JSON.parse(JSON.stringify(featured_playlist_results));\n            this.setState({ featuredPlaylists: featuredPlaylistsFromApi.playlists.items })\n        });\n    }\n    \n    render() {\n        return (\n            <div className=\"featured-playlists-category\">\n                <h3>Featured Playlists</h3>\n                <div className=\"category\">\n                    {this.state.featuredPlaylists.map((featuredPlaylist) => \n                    <Link to={{pathname: process.env.PUBLIC_URL + \"/songs\",\n                                state: {\n                                    playlistId: featuredPlaylist.id,\n                                    playlistName: featuredPlaylist.name,\n                                    playlistOwner: featuredPlaylist.owner\n                        }}} className=\"featured-playlist-tile-link\" key={featuredPlaylist.id}>\n                        <div className=\"featured-playlist-tile\" key={featuredPlaylist.id}>\n                            {featuredPlaylist.images.map((image) => \n                            <img className=\"featured-playlist-img\" key={featuredPlaylist.id} src={image.url} alt={featuredPlaylist.name}/>)}\n                            <p key={featuredPlaylist.id} className=\"featured-playlist-name\"> {featuredPlaylist.name} </p>\n                        </div>\n                    </Link>)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FeaturedPlaylists","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport client_credential_flow from \"./clientCredential.js\"\n\nclass NewReleases extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newReleases: []\n        }\n    }\n\n    componentDidMount() {\n        client_credential_flow ('https://api.spotify.com/v1/browse/new-releases', (err, new_releases_results) => {\n            console.log(err, new_releases_results);\n            let newReleasesFromApi = JSON.parse(JSON.stringify(new_releases_results));\n            this.setState({ newReleases: newReleasesFromApi.albums.items })\n        });\n    }\n    \n    render() {\n        return (\n            <div className=\"new-releases-category\">\n                <h3>New Releases</h3>\n                <div className=\"category\">\n                    {this.state.newReleases.map((newRelease) => \n                    <Link to={{pathname: process.env.PUBLIC_URL + \"/album\",\n                                state: {\n                                    albumId: newRelease.id,\n                                    albumName: newRelease.name,\n                                    albumsArtists: newRelease.artists\n                        }}} className=\"new-releases-tile-link\" key={newRelease.id + newRelease.name}>\n                        <div className=\"new-releases-tile\" key={newRelease.id}>\n                            <img className=\"new-releases-img\" key={newRelease.images[1].url} src={newRelease.images[1].url} alt={newRelease.name}/>\n                            <p key={newRelease.name} className=\"new-releases-name\"> {newRelease.name} </p>\n                        </div>\n                    </Link>)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NewReleases","import React, {Component} from \"react\"\nimport \"../styles.css\"\nimport Musixplore from '../components/Musixplore'\nimport Genres from '../components/Genres'\nimport FeaturedPlaylists from '../components/FeaturedPlaylists'\nimport NewReleases from '../components/NewReleases'\n\n\nclass BrowsePage extends Component {    \n    render(){\n        return(\n            <div>\n                <Musixplore/>\n                <h2>Browse</h2>\n                <Genres/>\n                <FeaturedPlaylists/>\n                <NewReleases/>\n            </div>\n        )\n    }\n}\n\nexport default BrowsePage","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport client_credential_flow from \"./clientCredential.js\"\n\nclass Playlists extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            playlists: []\n        }\n    }\n\n    componentDidMount() {\n        client_credential_flow (\"https://api.spotify.com/v1/browse/categories/\"\n        .concat(this.props.playlistsId.location.state.categoryId).concat(\"/playlists\"), (err, playlist_results) => {\n            console.log(err, playlist_results);\n            let playlistsFromApi = JSON.parse(JSON.stringify(playlist_results));\n            this.setState({ playlists: playlistsFromApi.playlists.items })\n        });\n    }\n    \n    render() {\n        return (\n            <div className=\"playlists-category\">\n                <h3>{this.props.playlistsId.location.state.categoryName}</h3>\n                <div className=\"playlists\">\n                {this.state.playlists.map((playlist) => \n                <Link to={{pathname: process.env.PUBLIC_URL + \"/songs\",\n                            state: {\n                                playlistId: playlist.id,\n                                playlistName: playlist.name,\n                                playlistOwner: playlist.owner\n                            }\n                    }}\n                    className=\"playlist-tile-link\" key={playlist.id}>\n                    <div className=\"playlist-tile\" key={playlist.id}>\n                        {playlist.images.map((image) => \n                            <img className=\"playlist-img\" src={image.url} alt={playlist.name}/>)}\n                        <p className=\"playlist-name\"> {playlist.name}</p>\n                    </div>\n                </Link>)}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Playlists","import React from \"react\"\nimport \"../styles.css\"\nimport Musixplore from '../components/Musixplore'\nimport Playlists from '../components/Playlists'\n\nfunction PlaylistsPage(props) {  \n\n    console.log(props)\n\n    return(\n        <div>\n            <Musixplore/>\n            <h2>Playlists</h2>\n            < Playlists playlistsId={props}/>\n        </div>\n    )\n\n}\n\nexport default PlaylistsPage","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport client_credential_flow from \"./clientCredential.js\"\n\nclass Album extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            albumName: [],\n            albumArtists: [],\n            albumTracks: [],\n            albumImg: '',\n            albumId: '',\n            albumReleaseDate: ''    \n        }\n    }\n\n    componentDidMount() {\n        client_credential_flow (\"https://api.spotify.com/v1/albums/\"\n        .concat(this.props.albumInfo.location.state.albumId), (err, album_results) => {\n            console.log(err, album_results);\n            let albumFromApi = JSON.parse(JSON.stringify(album_results));\n            this.setState({ albumName: albumFromApi.name,\n                            albumArtists: albumFromApi.artists,\n                            albumTracks: albumFromApi.tracks.items,\n                            albumImg: albumFromApi.images[1].url,\n                            albumId: albumFromApi.id,\n                            albumReleaseDate: albumFromApi.release_date\n            })\n        });\n    }\n    \n    render() {\n        return (\n            <div className=\"album-catergory\">\n                <div className=\"playlist-info\">\n                    <h3>{this.state.albumName}</h3>\n                    <div className=\"list-of-artists\">\n                        <h3>Artist(s) - </h3>\n                        {this.state.albumArtists.map((artist, i) => [\n                            i > 0 && \", \",\n                        <h3 key={i}>&nbsp;{ artist.name }</h3>])}\n                    </div>\n                </div>\n                <div className=\"album\">\n                    {this.state.albumTracks.map((track) =>\n                    <Link to={{pathname: process.env.PUBLIC_URL + \"/songInfo\",\n                            state: {\n                                    songId: track.id,\n                                    songName: track.name,\n                                    albumId: this.state.albumId,\n                                    artists: track.artists\n                        }}} className=\"song-tile-link\" key={track.id}>\n                    <div className=\"song-tile\">\n                        <div className=\"song-info\">\n                            <p className=\"song-name\" key={track.name}>{track.name}</p>\n                            <div className=\"song-details\">\n                                <div className=\"list-of-artists\">\n                                    <p>Artist(s): </p>\n                                    {track.artists.map((artist, i) => [\n                                        i > 0 && \", \",\n                                    <p key={i}>&nbsp;{ artist.name }</p>])}\n                                </div>\n                                <p className=\"song-detail\"> Album: {this.state.albumName}</p> \n                                <p className=\"song-detail\" key={this.state.albumId}>Release date: {this.state.albumReleaseDate}</p>\n                            </div>\n                        </div>\n                        <img className=\"album-img\" src={this.state.albumImg} alt={this.state.albumName}/>\n                    </div>\n                    </Link>)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Album","import React from \"react\"\nimport \"../styles.css\"\nimport Musixplore from '../components/Musixplore'\nimport Album from '../components/Album'\n\nfunction AlbumPage(props) {  \n\n    console.log(props)\n\n    return(\n        <div>\n            <Musixplore/>\n            <h2>Album</h2>\n            <Album albumInfo={props}/>\n        </div>\n    )\n\n}\n\nexport default AlbumPage","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport client_credential_flow from \"./clientCredential.js\"\n\nclass Songs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            songs: []\n        }\n    }\n\n    componentDidMount() {\n        client_credential_flow (\"https://api.spotify.com/v1/playlists/\"\n        .concat(this.props.songsId.location.state.playlistId).concat(\"/tracks\"), (err, songs_results) => {\n            console.log(err, songs_results);\n            let songsFromApi = JSON.parse(JSON.stringify(songs_results));\n            this.setState({ songs: songsFromApi.items })\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"songs-catergory\">\n                <div className=\"playlist-info\">\n                    <h3>{this.props.songsId.location.state.playlistName}</h3>\n                    <h3> Owner - \n                        {this.props.songsId.location.state.playlistOwner === null ?\n                        \" null\" : this.props.songsId.location.state.playlistOwner.display_name}</h3>\n                </div>\n                <div className=\"songs\">\n                    {this.state.songs.flatMap(song =>  \n                    song.track === null ? <div></div> :\n                    <Link to={{pathname: process.env.PUBLIC_URL + \"/songInfo\",\n                            state: {\n                                    songId: song.track.id,\n                                    songName: song.track.name,\n                                    albumId: song.track.album.id,\n                                    artists: song.track.artists,\n                        }}} className=\"song-tile-link\" key={song.track.id}>\n                    <div className=\"song-tile\">\n                        <div className=\"song-info\">\n                            <p className=\"song-name\" key={song.track.name}>{song.track.name}</p>\n                            <div className=\"song-details\">\n                                <div className=\"list-of-artists\">\n                                    <p>Artist(s): </p>\n                                    {song.track.artists.map((artist, i) => [\n                                        i > 0 && \", \",\n                                    <p key={i}>&nbsp;{ artist.name }</p>])}\n                                </div>\n                                <p className=\"song-detail\"> Album: {song.track.album.name}</p> \n                                <p className=\"song-detail\" key={song.track.album.id}>Release date: {song.track.album.release_date}</p>\n                            </div>\n                        </div>\n                        <img className=\"album-img\" src={song.track.album.images[1].url} alt={song.track.album.name}/>\n                    </div>\n                    </Link>)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Songs","import React from \"react\"\nimport \"../styles.css\"\nimport Musixplore from '../components/Musixplore'\nimport Songs from '../components/Songs'\n\nfunction SongsPage(props) {  \n\n    console.log(props)\n\n    return(\n        <div>\n            <Musixplore/>\n            <h2>Songs</h2>\n            < Songs songsId={props}/>\n        </div>\n    )\n\n}\n\nexport default SongsPage","import React from 'react'\nimport client_credential_flow from \"./clientCredential.js\"\n\nclass AlbumInfoSI extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            album: {\n                name: '',\n                releaseDate: '',\n                type: '',\n                extUrl: '',\n                imgUrl: ''\n            }\n        }\n    }\n\n    //https://api.spotify.com/v1/albums/{id}\n    componentDidMount() {\n        client_credential_flow (\"https://api.spotify.com/v1/albums/\"\n        .concat(this.props.song.location.state.albumId), (err, album_results) => {\n            //console.log(err, album_results);\n            let albumDetailsFromApi = JSON.parse(JSON.stringify(album_results));\n            this.setState({ \n                name: albumDetailsFromApi.name,\n                releaseDate: albumDetailsFromApi.release_date,\n                type: albumDetailsFromApi.album_type,\n                extUrl: albumDetailsFromApi.external_urls.spotify,\n                imgUrl: albumDetailsFromApi.images[1].url\n             })\n        });\n    }\n    \n    render() {\n        return (\n            <div className=\"album-section\">\n                <div className=\"album-info\">\n                    <p className=\"album-name\">Album: {this.state.name}</p>\n                    <div className=\"album-details\">\n                        <p className=\"album-detail\">Release date: {this.state.releaseDate}</p>\n                        <p className=\"album-detail\">Album type: {this.state.type}</p>\n                        <p className=\"album-detail\">Spotify external url:{' '}\n                            <a className=\"preview\" href={this.state.extUrl}>here</a>\n                        </p>\n                    </div>\n                </div>\n                <img className=\"album-img\" src={this.state.imgUrl} alt={this.state.name}/>\n            </div>\n        );\n    }\n}\n\nexport default AlbumInfoSI","import React from 'react'\nimport client_credential_flow from \"./clientCredential.js\"\n\nclass SongDetailsSI extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            songDetails: {\n                duration: '',\n                popularity: '',\n                previewUrl: ''\n            }\n        }\n    }\n\n    //https://api.spotify.com/v1/tracks/{id}\n    componentDidMount() {\n        client_credential_flow (\"https://api.spotify.com/v1/tracks/\"\n        .concat(this.props.song.location.state.songId), (err, song_results) => {\n            //console.log(err, song_results);\n            let songDetailsFromApi = JSON.parse(JSON.stringify(song_results));\n            this.setState({ \n                duration: songDetailsFromApi.duration_ms,\n                popularity: songDetailsFromApi.popularity,\n                previewUrl: songDetailsFromApi.preview_url\n             })\n        });\n    }\n    \n    render() {        \n        var minutes = Math.floor(this.state.duration / 60000);\n        var seconds = ((this.state.duration % 60000) / 1000).toFixed(0);\n\n        return (\n            <div className=\"song-detail-section\">\n                <p className=\"song-detail\">Duration: {minutes + \":\" + (seconds < 10 ? '0' : '') + seconds}</p>\n                <p className=\"song-detail\">Popularity(from 1-100): {this.state.popularity}</p>\n                <p className=\"song-detail\">30 second preview:{' '}\n                    <a className=\"preview\" href={this.state.previewUrl}>here</a>\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default SongDetailsSI","import React, { Component } from 'react'\nimport client_credential_flow from \"./clientCredential.js\"\n\nclass ArtistsSI extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            artists: []\n        }\n    }\n\n    componentDidMount() {\n        // \"https://api.spotify.com/v1/artists?ids=0oSGxfWSnnOXhD2fKuz2Gy,3dBVyJ7JuOMt4GE9607Qin\"\n        const artistsUrl = \"https://api.spotify.com/v1/artists?ids=\"\n        let artistsIdsConcat = \"\"\n        artistsIdsConcat = this.props.song.location.state.artists.map((artist, index) => { \n            return artistsIdsConcat + artist.id;\n        });\n\n        let artistsUrlWithIds = artistsUrl.concat(artistsIdsConcat);\n\n        console.log(\"artistsUrlWithIds\", artistsUrlWithIds)\n\n        client_credential_flow (artistsUrlWithIds, (err, artists_results) => {\n            console.log(err, artists_results);\n            let artistsFromApi = JSON.parse(JSON.stringify(artists_results));\n            this.setState({ artists: artistsFromApi.artists })\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"artist-category\">\n                <h3>Artists</h3>\n                <div className=\"category\">\n                    {this.state.artists.map((artist) =>\n                    <a className=\"artist-tile-link\" href={artist.external_urls.spotify} key={artist.external_urls.url}> \n                    <div className=\"artist-tile\" key={artist.id}>\n                        <img className=\"artist-img\" src={artist.images[1].url} alt={artist.name} key={artist.images[1].url}/>\n                        <p className=\"artist-name\" key={artist.name}> {artist.name} </p>\n                    </div>\n                    </a>)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ArtistsSI","import React from \"react\"\nimport \"../styles.css\"\nimport Musixplore from '../components/Musixplore'\nimport AlbumInfoSI from '../components/AlbumInfoSI'\nimport SongDetailsSI from '../components/SongDetailsSI'\nimport ArtistsSI from '../components/ArtistsSI'\n\nfunction SongInfoPage(props) {  \n\n    console.log(props);\n\n    return(\n        <div>\n            <Musixplore/>\n            <h1>{props.location.state.songName}</h1>\n            <div className=\"song-info-category\">\n                <SongDetailsSI song={props}/>\n                <AlbumInfoSI song={props}/>\n                <ArtistsSI song={props}/>\n            </div>\n        </div>\n    )\n\n}\n\nexport default SongInfoPage","import React from \"react\"\nimport { Switch, Route } from 'react-router-dom'\nimport BrowsePage from '../pages/BrowsePage'\nimport PlaylistsPage from '../pages/PlaylistsPage'\nimport AlbumPage from '../pages/AlbumPage'\nimport SongsPage from '../pages/SongsPage'\nimport SongInfoPage from '../pages/SongInfoPage'\n\nconst Main = () => {\n\n    // <Route path=\"speaker\" component={Speaker}/>\n    // <Route path=\"speaker\" render={props => <Speaker {...props} />} />\n    return (\n        <Switch>\n            <Route exact path={process.env.PUBLIC_URL + '/'} render={props => <BrowsePage{...props} />} />\n            <Route exact path={process.env.PUBLIC_URL + '/playlists'} render={props => <PlaylistsPage{...props} />} />\n            <Route exact path={process.env.PUBLIC_URL + '/album'} render={props => <AlbumPage{...props} />} />\n            <Route exact path={process.env.PUBLIC_URL + '/songs'} render={props => <SongsPage{...props} />} />\n            <Route exact path={process.env.PUBLIC_URL + '/songInfo'} render={props => <SongInfoPage{...props} />} />\n        </Switch>\n    );\n}\n\nexport default Main","import React from \"react\"\nimport Main from \"./components/Main\"\n\nfunction App() {\n\n    return (\n      <div className=\"App\">\n        <Main />\n      </div>\n    );\n  }\n\nexport default App","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport App from \"./App\"\n\nReactDOM.render((\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n), document.getElementById('root'));"],"sourceRoot":""}